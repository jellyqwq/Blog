import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as n,f as e,b as p,a as o}from"./app-XoEOURcT.js";const t={},c=p("p",null,"在之前的hadoop配置基础上, 现在来做一个上传文件到hadoop系统的java程序",-1),l=o(`<p>之前的教程使用的 <code>~/hadoop</code> 作为hadoop的根目录似乎有点不直观, 现在在 <code>~/.bashrc</code> 里增加 hadoop 根目录作为 <code>HADOOP_HOME</code>.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;export HADOOP_HOME=~/hadoop&quot;</span> <span class="token operator">&gt;&gt;</span> ~/.bashrc <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">source</span> ~/.bashrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以先创建一个用于存放程序的目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token variable">$HADOOP_HOME</span>/programs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后创建一个 <code>UploadFile.java</code> 文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">touch</span> <span class="token variable">$HADOOP_HOME</span>/programs/UploadFile.java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>UploadFile.java的内容为</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>conf<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>fs<span class="token punctuation">.</span></span><span class="token class-name">FileSystem</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>hadoop<span class="token punctuation">.</span>fs<span class="token punctuation">.</span></span><span class="token class-name">Path</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URI</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URISyntaxException</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UploadFile</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Configuration</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileSystem</span> fs <span class="token operator">=</span> <span class="token class-name">FileSystem</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URI</span><span class="token punctuation">(</span><span class="token string">&quot;hdfs://misaka0:9000&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> conf<span class="token punctuation">,</span> <span class="token string">&quot;hadoop&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Path</span> src <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">&quot;./access.log&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Path</span> dis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token string">&quot;/tmp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fs<span class="token punctuation">.</span><span class="token function">copyFromLocalFile</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> src<span class="token punctuation">,</span> dis<span class="token punctuation">)</span><span class="token punctuation">;</span>
        fs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后编译这段代码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>javac <span class="token parameter variable">-classpath</span> <span class="token variable">$HADOOP_HOME</span>/share/hadoop/common/hadoop-common-3.2.4.jar <span class="token variable">$HADOOP_HOME</span>/programs/UploadFile.java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>经过上一个命令后, 会产生一个 <code>UploadFile.class</code> 文件, 接着对UploadFile进行打包</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>jar <span class="token parameter variable">-cvf</span> <span class="token variable">$HADOOP_HOME</span>/programs/UploadFile.jar <span class="token variable">$HADOOP_HOME</span>/programs/UploadFile.class
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上述过程就把一会要用的程序准备好了, 接下来要在hadoop系统内创建一个 <code>tmp</code> 目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hdfs dfs <span class="token parameter variable">-mkdir</span> /tmp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后再创建一个 <code>access.log</code> 文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">touch</span> <span class="token variable">$HADOOP_HOME</span>/programs/access.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>接着在上述 <code>access.log</code> 文件所在的目录里运行我们打包好的程序, 执行成功无输出</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hadoop jar <span class="token variable">$HADOOP_HOME</span>/programs/UploadFile.jar UploadFile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最后查看是否上传成功</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hdfs dfs <span class="token parameter variable">-ls</span> /tmp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,20);function i(d,u){return s(),n("div",null,[c,e(" more "),l])}const m=a(t,[["render",i],["__file","hadoop-upload-file-by-java.html.vue"]]);export{m as default};
