import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o,c,f as l,b as n,d as a,e as t,a as r}from"./app-XoEOURcT.js";const u={},i=n("p",null,"torch.nn.Flatten()是一个用于对tensor降维的对象, 而torch.flatten()是一个用于对tensor降维的函数.",-1),d=r(`<h2 id="torch-nn-flatten" tabindex="-1"><a class="header-anchor" href="#torch-nn-flatten" aria-hidden="true">#</a> torch.nn.Flatten</h2><p><code>torch.nn.Flatten(start_dim=1, end_dim=-1)</code> 有两个参数表示降维维度的范围, 默认是从第二个维度(index 1)到最后一个维度(index -1)</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">input</span> <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token comment"># With default parameters</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> m <span class="token operator">=</span> nn<span class="token punctuation">.</span>Flatten<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> output <span class="token operator">=</span> m<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> output<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span>
torch<span class="token punctuation">.</span>Size<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token comment"># With non-default parameters</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> m <span class="token operator">=</span> nn<span class="token punctuation">.</span>Flatten<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> output <span class="token operator">=</span> m<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> output<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span>
torch<span class="token punctuation">.</span>Size<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述定义了一个四维的tensor, 使用默认的<code>torch.nn.Flatten()</code>实例化对象是取<code>index 1</code>到<code>index -1</code>对应上述的<code>input</code>就是<code>1, 5, 5</code>, 降维大小计算是降维前的大小累乘, 因此<code>output</code>的size是<code>[32, 1*5*5]</code>, 后者不用默认参数, 使用区间<code>[0, 2]</code>, 故降维后的size是<code>[32*1*5, 5]</code>.</p><h2 id="torch-flatten" tabindex="-1"><a class="header-anchor" href="#torch-flatten" aria-hidden="true">#</a> torch.flatten</h2><p><code>torch.flatten(input: Tensor, start_dim: _int = 0, end_dim: _int = -1)</code>, 是一个有三个参数的函数, 第一个<code>input</code>是输入的Tensor对象, 第二和第三个是维度索引的起始和结束.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">input</span> <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> output <span class="token operator">=</span> torch<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span> 
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> output<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span>
torch<span class="token punctuation">.</span>Size<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">800</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述示例中, 默认的<code>torch.flatten()</code>使用区间<code>[0, -1]</code>, 即降至一维, 所以输出size是<code>[32*1*5*5]</code>.</p><h2 id="补充" tabindex="-1"><a class="header-anchor" href="#补充" aria-hidden="true">#</a> 补充</h2><p>对于一个<code>Tensor</code>对象而言, <code>.size()</code>方法和<code>.shape</code>属性都可获得该对象的<code>Size</code>.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">input</span> <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">input</span><span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span>
torch<span class="token punctuation">.</span>Size<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">input</span><span class="token punctuation">.</span>shape 
torch<span class="token punctuation">.</span>Size<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考文献" tabindex="-1"><a class="header-anchor" href="#参考文献" aria-hidden="true">#</a> 参考文献</h2>`,12),k={href:"https://stackoverflow.com/questions/67460123/understanding-torch-nn-flatten",target:"_blank",rel:"noopener noreferrer"},h={href:"https://pytorch.org/docs/stable/generated/torch.randn.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://pytorch.org/docs/stable/generated/torch.nn.Flatten.html#torch.nn.Flatten",target:"_blank",rel:"noopener noreferrer"},b={href:"https://pytorch.org/docs/stable/generated/torch.flatten.html",target:"_blank",rel:"noopener noreferrer"};function g(v,f){const s=p("ExternalLinkIcon");return o(),c("div",null,[i,l(" more "),d,n("ol",null,[n("li",null,[n("a",k,[a("https://stackoverflow.com/questions/67460123/understanding-torch-nn-flatten"),t(s)])]),n("li",null,[n("a",h,[a("https://pytorch.org/docs/stable/generated/torch.randn.html"),t(s)])]),n("li",null,[n("a",m,[a("https://pytorch.org/docs/stable/generated/torch.nn.Flatten.html#torch.nn.Flatten"),t(s)])]),n("li",null,[n("a",b,[a("https://pytorch.org/docs/stable/generated/torch.flatten.html"),t(s)])])])])}const y=e(u,[["render",g],["__file","difference-between-nn.Flatten-and-flatten.html.vue"]]);export{y as default};
