import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o as i,c,b as n,d as a,e as s,w as d,a as e}from"./app-XoEOURcT.js";const r={},u=n("h3",{id:"前言",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),a(" 前言")],-1),k=e(`<h3 id="安装java" tabindex="-1"><a class="header-anchor" href="#安装java" aria-hidden="true">#</a> 安装java</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
<span class="token comment"># 将java的压缩包从宿主机上挂载的目录上复制过来</span>
<span class="token function">cp</span> ~/package/jdk-8u161-linux-x64.tar.gz ~/

<span class="token comment"># 解压</span>
<span class="token comment"># [-x] 解压</span>
<span class="token comment"># [-z] 有gzip属性的</span>
<span class="token comment"># [-v] 显示过程</span>
<span class="token comment"># [-f] 最后一个参数, 后接档案</span>
<span class="token comment"># [-C] 指定目标目录</span>
<span class="token function">tar</span> <span class="token parameter variable">-xzvf</span> ~/jdk-8u161-linux-x64.tar.gz ~C ~/

<span class="token comment"># 重命名解压目录</span>
<span class="token function">mv</span> ~/jdk1.8.0_161 ~/java

<span class="token comment"># 为java的bin目录和java包所在目录追加到环境变量</span>
<span class="token builtin class-name">echo</span> <span class="token string">&#39;export PATH=$PATH:~/java/bin&#39;</span><span class="token operator">&gt;&gt;</span>~/.bashrc
<span class="token builtin class-name">echo</span> <span class="token string">&#39;export JAVA_HOME=~/java&#39;</span><span class="token operator">&gt;&gt;</span>~/.bashrc

<span class="token comment"># 刷新环境变量</span>
<span class="token builtin class-name">source</span> ~/.bashrc

<span class="token comment"># 使用java的命令查看是否配置成功</span>
jps
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="安装zookeeper" tabindex="-1"><a class="header-anchor" href="#安装zookeeper" aria-hidden="true">#</a> 安装zookeeper</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> ~/package/apache-zookeeper-3.5.10-bin.tar.gz ~/
<span class="token function">tar</span> <span class="token parameter variable">-xzf</span> ~/apache-zookeeper-3.5.10-bin.tar.gz <span class="token parameter variable">-C</span> ~/
<span class="token function">mv</span> ~/apache-zookeeper-3.5.10-bin ~/zookeeper
<span class="token builtin class-name">echo</span> <span class="token string">&#39;export PATH=$PATH:~/zookeeper/bin&#39;</span><span class="token operator">&gt;&gt;</span>~/.bashrc
<span class="token builtin class-name">source</span> ~/.bashrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3><p>在zookeeper下创建目录data</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> ~/zookeeper/data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>备份并修改zookeeper配置文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> ~/zookeeper/conf/zoo_sample.cfg ~/zookeeper/conf/zoo.cfg
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&quot;s#dataDir=.*#dataDir=~/zookeeper/data#g&quot;</span> ~/zookeeper/conf/zoo.cfg
<span class="token builtin class-name">echo</span> <span class="token string">&#39;server.0=192.168.60.10:2888:3888&#39;</span><span class="token operator">&gt;&gt;</span>~/zookeeper/conf/zoo.cfg
<span class="token builtin class-name">echo</span> <span class="token string">&#39;server.1=192.168.60.11:2888:3888&#39;</span><span class="token operator">&gt;&gt;</span>~/zookeeper/conf/zoo.cfg
<span class="token builtin class-name">echo</span> <span class="token string">&#39;server.2=192.168.60.12:2888:3888&#39;</span><span class="token operator">&gt;&gt;</span>~/zookeeper/conf/zoo.cfg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在data目录下创建文件myid, 并写入一个id, 由于我的hostname是<strong>misaka+number</strong>, 所以直接使用number作为id</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">touch</span> ~/zookeeper/data/myid
<span class="token builtin class-name">echo</span> <span class="token environment constant">$HOSTNAME</span> <span class="token operator">|</span> <span class="token builtin class-name">echo</span> <span class="token variable">\${<span class="token environment constant">HOSTNAME</span><span class="token operator">/</span>misaka<span class="token operator">/</span>}</span><span class="token operator">&gt;&gt;</span>~/zookeeper/data/myid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h3><p>启动 &amp; 关闭</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>zkServer.sh <span class="token punctuation">[</span>start<span class="token operator">|</span>stop<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="zookeeper作用" tabindex="-1"><a class="header-anchor" href="#zookeeper作用" aria-hidden="true">#</a> zookeeper作用</h3><ol><li>zookeeper动态决定由哪台机器对外, 提供统一的资源服务</li><li>资源的动态同步</li></ol>`,17),v={href:"https://segmentfault.com/a/1190000017893271",target:"_blank",rel:"noopener noreferrer"},g=e(`<hr><h3 id="hadoop安装" tabindex="-1"><a class="header-anchor" href="#hadoop安装" aria-hidden="true">#</a> hadoop安装</h3><ol><li>解压</li><li>配置bin和sbin到环境变量~/.bashrc</li><li>配置文件~/hadoop/etc/hadoop/core-site.xml</li></ol><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>fs.defaultFS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>hdfs://misaka0:9000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>hadoop.tmp.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>~/hadoop/temp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>随后在~/hadoop下创建目录temp, 目录data/datanode, 目录data/namenode</li><li>配置文件 <code>~/hadoop/etc/hadoop/hdfs-site.xml</code> , <code>dfs.nodename.http.address</code> 参数是用于开启webUI的, <code>dfs.replication</code> 是用于设置备份数的</li></ol><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.namenode.name.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>~/hadoop/data/namenode<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.datanode.data.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>~/hadoop/data/datanode<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.nodename.http.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>misaka0:9870<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>dfs.replication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>初始化配置文件</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>hadoop namenode <span class="token parameter variable">-format</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="7"><li>启动Hadoop, 使用root启动时请看<a href="#root%E5%90%AF%E5%8A%A8hadoop">root启动hadoop</a></li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>start-dfs.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="8"><li>关闭Hadoop可使用 <code>stop-dfs.sh</code> 或 <code>stop-all.sh</code> 命令</li></ol><hr><h3 id="root启动hadoop" tabindex="-1"><a class="header-anchor" href="#root启动hadoop" aria-hidden="true">#</a> root启动hadoop</h3>`,13),m={href:"http://xn--start-dfs-kd5p.sh",target:"_blank",rel:"noopener noreferrer"},h=e(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">HDFS_DATANODE_USER</span><span class="token operator">=</span>root
<span class="token assign-left variable">HADOOP_SECURE_DN_USER</span><span class="token operator">=</span>hdfs
<span class="token assign-left variable">HDFS_NAMENODE_USER</span><span class="token operator">=</span>root
<span class="token assign-left variable">HDFS_SECONDARYNAMENODE_USER</span><span class="token operator">=</span>root
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),b={href:"http://xn--start-yarn-eh3r.sh",target:"_blank",rel:"noopener noreferrer"},f=e(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">YARN_RESOURCEMANAGER_USER</span><span class="token operator">=</span>root
<span class="token assign-left variable">HADOOP_SECURE_DN_USER</span><span class="token operator">=</span>yarn
<span class="token assign-left variable">YARN_NODEMANAGER_USER</span><span class="token operator">=</span>root
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="启动hadoop可能会出现的错误" tabindex="-1"><a class="header-anchor" href="#启动hadoop可能会出现的错误" aria-hidden="true">#</a> 启动hadoop可能会出现的错误</h3><ol><li>如下报错</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>localhost: Permission denied <span class="token punctuation">(</span>publickey,gssapi-keyex,gssapi-with-mic,password<span class="token punctuation">)</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>请注意, 要对目标机器配置ssh免密, 即使是本机也要</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ssh-copy-id <span class="token function">hostname</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h3 id="faq" tabindex="-1"><a class="header-anchor" href="#faq" aria-hidden="true">#</a> FAQ</h3><p><em>A: SHUTDOWN_MSG: Shutting down NameNode at hostname/ip</em></p><p>Q: 配置初始化完成后就会显示, 一般情况下没有错误, 在上方的INFO中找到common.Storage的输出可以看到末尾有successfully formatted表示初始化成功</p><p><em>A: yum下载失败</em></p><p>Q: <code>ping baidu.com</code> 和 <code>ping 百度的IP</code>, 如果域名ping不通就修改dns, 在<code>/etc/resolv.conf</code>中, 添加</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>nameserver 8.8.8.8
nameserver 8.8.4.4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,15);function x(_,z){const o=p("RouterLink"),t=p("ExternalLinkIcon");return i(),c("div",null,[u,n("p",null,[a("本文记录了hadoop集群安装的相应细节, 需要您具备一定的Linux命令常识, 同时, 本文的运行环境为docker centos7, 基于"),s(o,{to:"/code/language/docker/docker-install-centos7.html"},{default:d(()=>[a("docker-install-centos7")]),_:1})]),k,n("p",null,[a("参考资料: "),n("a",v,[a("Zookeeper 集群安装配置"),s(t)])]),g,n("p",null,[n("a",m,[a("在start-dfs.sh"),s(t)]),a("，stop-dfs.sh两个文件的头部填加以下参数")]),h,n("p",null,[n("a",b,[a("在start-yarn.sh"),s(t)]),a("，stop-yarn.sh两个文件的头部添加以下参数")]),f])}const y=l(r,[["render",x],["__file","hadoop-setup.html.vue"]]);export{y as default};
