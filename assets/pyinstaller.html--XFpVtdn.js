import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,a as p}from"./app-XoEOURcT.js";const t={},e=p(`<h2 id="pyinstaller" tabindex="-1"><a class="header-anchor" href="#pyinstaller" aria-hidden="true">#</a> Pyinstaller</h2><p>当做一个项目需要打包时，不免会遇到将项目打包成可执行文件的问题，这个时候就要用到pyinstaller这个包了</p><p>首先要解决一个重要的问题，python文件在vscode中的项目路径和cmd打开的项目路径时不一样的，当项目中用到IO操作，或者相对路径引用时会出问题——找不到相关文件，因此需要在项目的启动文件加上</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>os<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>表示把当前文件所在的文件夹作为项目的启动路径。**<strong>file</strong>**可以获取当前执行的文件所在的绝对路径，**os.path.dirname(<strong>file</strong>)**可以通过文件绝对路径获取文件所在的文件夹的绝对路径，**os.chdir(path)**而则是将运行目录切换到该文件所在的文件夹下</p><p>但实践后我发现，打包后的exe文件运行目录在C盘下的一个缓存目录里，运行完后会把所生成的文件清除，这导致并不能像运行py那样在当前exe所在下生成文件，需要引入一个冻结路径，创建一个py文件在要打包的文件下</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">-</span><span class="token operator">*</span><span class="token operator">-</span> coding<span class="token punctuation">:</span> utf<span class="token operator">-</span><span class="token number">8</span> <span class="token operator">-</span><span class="token operator">*</span><span class="token operator">-</span>
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> os

<span class="token keyword">def</span> <span class="token function">app_path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;Returns the base application path.&quot;&quot;&quot;</span>
    <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>sys<span class="token punctuation">,</span> <span class="token string">&#39;frozen&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># Handles PyInstaller</span>
        <span class="token keyword">return</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>executable<span class="token punctuation">)</span>       <span class="token comment">#使用pyinstaller打包后的exe目录</span>
    <span class="token keyword">return</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span>                 <span class="token comment">#没打包前的py目录</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当需要IO操作时使用如下代码，其中relative_path为以exe所在文件夹为项目路径的相对路径</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">file</span> <span class="token operator">=</span> frozen_dir<span class="token punctuation">.</span>app_path<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&#39;relative_path&#39;</span>
dirname <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>dirname<span class="token punctuation">)</span><span class="token punctuation">:</span>
    os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>dirname<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在打包时需要使用-D参数，如果使用-F生成单文件则无法实现exe所在目录的相对路径读写. (-D是生成可执行项目, -F是生成可执行文件)</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Pyinstaller <span class="token operator">-</span>i xx<span class="token punctuation">.</span>ico <span class="token operator">-</span>D main<span class="token punctuation">.</span>py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中参数-i xx.ico可以为可执行文件指定图标</p><p>另外-n Name可以对可执行项目命名, -h|–help可以获取具体的使用方法</p>`,13),o=[e];function i(c,l){return s(),a("div",null,o)}const d=n(t,[["render",i],["__file","pyinstaller.html.vue"]]);export{d as default};
