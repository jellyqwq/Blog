import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,a as p}from"./app-XoEOURcT.js";const e={},t=p(`<h1 id="multiprocessing-map-多参数传递" tabindex="-1"><a class="header-anchor" href="#multiprocessing-map-多参数传递" aria-hidden="true">#</a> multiprocessing map()多参数传递</h1><p>首先从模块multiprocessing导入Pool类,实例化并调用。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> multiprocessing <span class="token keyword">import</span> Pool

pool <span class="token operator">=</span> Pool<span class="token punctuation">(</span><span class="token punctuation">)</span>
pool<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>function<span class="token punctuation">,</span> parameter<span class="token punctuation">)</span>
pool<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
pool<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>function是要需要进行多进程的函数，parameter是该函数的一个参数，但是也是唯一的一个参数，因此，当这个函数存在多个参数时，map就略显疲惫。</p><p>一开始我想到那把多个参数整合到 一个参数里，如丢到 一个列表里再传到函数里，这的确是一种方法。</p><p>但是如果还有当有一个参数是保持不变，但是也要传进去，怎么办，用上述的方法这个列表里会产生很多重复的数据，会降低效率——尽管看不出来。</p><p>现在来解决这个问题，需要从functools模块中导入partial。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> functools <span class="token keyword">import</span> partial
<span class="token comment"># partical函数可以为把函数的多个参数传入</span>
par <span class="token operator">=</span> partial<span class="token punctuation">(</span>function<span class="token punctuation">,</span> <span class="token operator">*</span>kargs<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同时将pool.map部分更换下。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>pool<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>par<span class="token punctuation">,</span> iteration<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>iteration就是function函数的第一个参数，一般是一个可迭代对象。</p>`,11),o=[t];function i(c,l){return a(),s("div",null,o)}const d=n(e,[["render",i],["__file","multiprocessing.html.vue"]]);export{d as default};
